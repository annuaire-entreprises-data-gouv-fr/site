import React from 'react';
import { IUniteLegale } from '../../models';
import { EAdministration } from '../../models/administration';
import {
  IAPINotRespondingError,
  isAPINotResponding,
} from '../../models/api-not-responding';
import { IImmatriculationRNCS } from '../../models/immatriculation';
import { formatDate, formatIntFr } from '../../utils/helpers/formatting';
import AdministrationNotResponding from '../administration-not-responding';
import { INPI } from '../administrations';
import BreakPageForPrint from '../print-break-page';
import ButtonLink from '../button';
import ButtonInpiPdf from '../button-inpi-pdf';
import { Section } from '../section';
import { TwoColumnTable } from '../table/simple';
import { PrintNever } from '../print-visibility';
import { Closed, Open } from '../icon';
import Warning from '../alerts/warning';

interface IProps {
  immatriculation: IImmatriculationRNCS | IAPINotRespondingError;
  uniteLegale: IUniteLegale;
}

const ImmatriculationRNCS: React.FC<IProps> = ({
  immatriculation,
  uniteLegale,
}) => {
  if (isAPINotResponding(immatriculation)) {
    if (immatriculation.errorType === 404) {
      return null;
    }
    return (
      <AdministrationNotResponding
        {...immatriculation}
        title="Immatriculation RNCS"
      />
    );
  }

  // inpi API call failed and fallbacked on site ping
  const isImmatriculationIncomplete =
    !immatriculation.dateRadiation &&
    !immatriculation.dateImmatriculation &&
    !immatriculation.numeroRCS &&
    !immatriculation.denomination;

  return (
    <>
      {immatriculation.downloadlink && (
        <>
          <Section
            id="rncs"
            title="Immatriculation au RNCS"
            source={EAdministration.INPI}
          >
            {isImmatriculationIncomplete && (
              <Warning>
                Le t√©l√©service de l‚Äô
                <INPI />, qui nous transmet les donn√©es, est partiellement{' '}
                <b>hors service üî¥</b>.
                <br />
                Les donn√©es √† notre disposition sont donc <b>incompl√®tes</b> et
                nous ne pouvons pas afficher le capital social, le num√©ro RCS,
                les dirigeants et les dates d‚Äôimmatriculation ou de radiation de
                cette entreprise.
                <br />
                Toutefois, vous pouvez retrouver ces donn√©es sur le PDF
                d‚Äôimmatriculation ou la page entreprise sur le site de l‚Äô
                <INPI />
              </Warning>
            )}
            <p>
              Cette entit√© poss√®de une fiche d‚Äôimmatriculation au{' '}
              <b>Registre National du Commerce et des Soci√©t√©s (RNCS)</b> qui
              liste les entreprises enregistr√©es aupr√®s des Greffes des
              tribunaux de commerce et centralis√©es par l‚Äô
              <INPI />.
            </p>
            {!isImmatriculationIncomplete && (
              <ImmatriculationRNCSTable
                immatriculation={immatriculation}
                uniteLegale={uniteLegale}
              />
            )}
            <PrintNever>
              <p>
                Pour acc√©der √† l‚Äôensemble des donn√©es contenues dans un extrait
                KBIS, t√©l√©chargez le justificatif d‚Äôimmatriculation via le{' '}
                <b>bouton ci-dessous</b>. Le t√©l√©chargement peut prendre
                quelques dizaines de secondes.
              </p>
              <div className="layout-center">
                <ButtonInpiPdf siren={immatriculation.siren} />
                <div className="separator" />
                <ButtonLink
                  nofollow={true}
                  target="_blank"
                  to={`${immatriculation.downloadlink}`}
                  alt
                >
                  ‚á¢ Voir la fiche sur le site de l‚ÄôINPI
                </ButtonLink>
              </div>
              <p>
                <b>NB :</b> si le t√©l√©chargement √©choue, vous pouvez acc√©der √†
                la donn√©e en allant sur le site de l‚Äô
                <INPI />. Pour acc√©der √† l‚Äôensemble de la donn√©e en utilisant le
                site de l‚Äô
                <INPI /> vous devrez vous cr√©er un compte <INPI />.
              </p>
            </PrintNever>
            <style jsx>{`
              .separator {
                width: 10px;
                height: 10px;
              }
            `}</style>
          </Section>
          <BreakPageForPrint />
        </>
      )}
    </>
  );
};

const ImmatriculationRNCSTable: React.FC<{
  immatriculation: IImmatriculationRNCS;
  uniteLegale: IUniteLegale;
}> = ({ immatriculation, uniteLegale }) => {
  const data = [
    [
      'Statut',
      <>
        {immatriculation.dateRadiation ? (
          <b>
            <Closed /> Radi√©e
          </b>
        ) : (
          <b>
            <Open /> Inscrite
          </b>
        )}
      </>,
    ],
    [
      'Date d‚Äôimmatriculation au RNCS',
      formatDate(immatriculation.dateImmatriculation),
    ],
    ['Num√©ro RCS', immatriculation.numeroRCS],
    ['Num√©ro de Gestion', immatriculation.numGestion],
    ['D√©nomination', immatriculation.denomination],
    ['Siren', formatIntFr(immatriculation.siren)],
    [
      'Dirigeant(s)',
      <a key="dirigeant" href={`/dirigeants/${uniteLegale.siren}`}>
        ‚Üí voir les dirigeants
      </a>,
    ],
    [
      'Si√®ge social',
      <a key="siege" href={`/etablissement/${uniteLegale.siege.siret}`}>
        ‚Üí voir le d√©tail du si√®ge social
      </a>,
    ],
    ['Nature juridique', immatriculation.libelleNatureJuridique],
    ['Date de d√©but d‚Äôactivit√©', formatDate(immatriculation.dateDebutActiv)],
  ];

  if (immatriculation.isPersonneMorale) {
    data.push(
      ['Capital', immatriculation.capital],
      [
        'Date de cl√¥ture de l‚Äôexercice comptable',
        immatriculation.dateClotureExercice,
      ],
      ['Dur√©e de la personne morale', immatriculation.dureePersonneMorale]
    );
  }

  if (immatriculation.dateCessationActivite) {
    data.push([
      'Date de cessation d‚Äôactivit√©',
      formatDate(immatriculation.dateCessationActivite),
    ]);
  }
  if (immatriculation.dateRadiation) {
    data.push(['Date de radiation', formatDate(immatriculation.dateRadiation)]);
  }

  return <TwoColumnTable body={data} />;
};

export default ImmatriculationRNCS;
