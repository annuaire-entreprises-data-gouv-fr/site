# This workflow will check if no regression is introduced in externals API
# https://192dot.medium.com/sign-commit-using-github-actions-app-13488f6e76b7

name: 'External API check'

on:
  workflow_dispatch:
  # Check twice a day at 5:00 AM and 3:00 PM
  schedule:
    - cron: '0 5,15 * * *'

# Be extremely careful as the env variables defined here are accessible by all the actions of the workflow.
# For critical env variable, declare it within the action.
env:
  node-version: 18.x

jobs:
  dependencies:
    name: 'Install dependencies'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}
      - uses: ./.github/actions/install-dependencies
        name: Install and cache dependencies

  testExternalAPIs:
    name: Test externals API
    runs-on: ubuntu-latest
    needs: [dependencies]
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}
      - name: Load node_modules
        uses: ./.github/actions/load-dependencies

      - name: Run API client unit tests
        run: |
          npm run test:api-clients:update-snapshots -- --runInBand --testTimeout=61000 --silent

      - name: debug
        run: git diff HEAD $FILE_TO_UPDATE

      - name: Check for changes
        id: git_diff
        run: |
          if [ ! -f "$FILE_TO_UPDATE" ]; then
            echo 'no such file'
            echo "changes_detected=false" >> $GITHUB_ENV
          else
            set +e
            git diff --quiet HEAD $FILE_TO_UPDATE
            if [ $? -ne 0 ]; then
              echo 'changes detected'
              echo "changes_detected=true" >> $GITHUB_ENV
            else
              echo 'changes not detected'
              echo "changes_detected=false" >> $GITHUB_ENV
            fi
            set -e
          fi

      - name: Get current branch commit SHA
        id: get_sha
        run: |
          echo "Getting the latest commit SHA..."
          SHA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/git/refs/heads/main | jq -r .object.sha)
          echo "sha=$SHA" >> $GITHUB_ENV

      - name: Create new branch
        if: env.changes_detected == 'true'
        id: create_branch
        run: |
          echo "Creating a new branch BOT-snapshots-update..."
          curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d "{\"ref\":\"refs/heads/BOT-snapshots-update\", \"sha\":\"${{ env.sha }}\"}" \
            https://api.github.com/repos/${{ github.repository }}/git/refs
          echo "branch=BOT-snapshots-update" >> $GITHUB_ENV

      - name: Commit changes
        if: env.changes_detected == 'true'
        run: |
          echo "Committing changes..."
          FILES_CHANGED=$(git status --porcelain | awk '{print $2}')
          for file in $FILES_CHANGED; do
            CONTENT=$(base64 -w 0 $file)
            FILENAME=$(basename $file)
            SHA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/contents/$file?ref=BOT-snapshots-update | jq -r .sha)
            if [ "$SHA" == "null" ]; then
              SHA=""
            fi
            curl -s -X PUT -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -d "{\"message\":\"Update $FILENAME\", \"content\":\"$CONTENT\", \"branch\":\"BOT-snapshots-update\", \"sha\":\"$SHA\"}" \
              https://api.github.com/repos/${{ github.repository }}/contents/$file
          done

      - name: Create Pull Request
        if: env.changes_detected == 'true'
        run: |
          echo "Creating a pull request..."
          curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d "{\"title\":\"ðŸ¤– API client snapshots update\", \"head\":\"BOT-snapshots-update\", \"base\":\"main\", \"body\":\"
            *This PR is automatically generated by a bot.*
            It updates the snapshots of the API clients.

            Review carefully the changes to see if there is no regression:
            - No changes in attributes names
            - No suspect massive changes in the data
            - No changes in the structure of the data

            If everything looks good, you can merge this PR. 

            Otherwise, you should take action to fix the issue, by either: 
            - Contact the administration responsible for the API
            - Change the client code to adapt to the new data
            \"}" \
            https://api.github.com/repos/${{ github.repository }}/pulls
