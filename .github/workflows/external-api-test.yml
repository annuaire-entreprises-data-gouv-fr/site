# This workflow will check if no regression is introduced in externals API

name: 'External API check'

# Check every day at 6:00 AM
on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *'

# Be extremely careful as the env variables defined here are accessible by all the actions of the workflow.
# For critical env variable, declare it within the action.
env:
  node-version: 18.x
  INSEE_CLIENT_ID: ${{ secrets.INSEE_CLIENT_ID }}
  INSEE_CLIENT_SECRET: ${{ secrets.INSEE_CLIENT_SECRET}}
  INSEE_CLIENT_ID_FALLBACK: ${{ secrets.INSEE_CLIENT_ID_FALLBACK }}
  INSEE_CLIENT_SECRET_FALLBACK: ${{ secrets.INSEE_CLIENT_SECRET_FALLBACK}}
  END2END_MOCKING: disabled
  INSEE_ENABLED: enabled
  INDEXING_ENABLED: enabled
  PROXY_API_KEY: ${{ secrets.PROXY_API_KEY }}
  REDIS_URL: redis://127.0.0.1:6379
  MONCOMPTEPRO_CLIENT_ID: ${{ secrets.MONCOMPTEPRO_CLIENT_ID }}
  MONCOMPTEPRO_CLIENT_SECRET: ${{ secrets.MONCOMPTEPRO_CLIENT_SECRET }}
  MONCOMPTEPRO_URL: ${{ secrets.MONCOMPTEPRO_URL }}
  MONCOMPTEPRO_REDIRECT_URI: ${{ secrets.MONCOMPTEPRO_REDIRECT_URI }}
  MONCOMPTEPRO_POST_LOGOUT_REDIRECT_URI: ${{ secrets.MONCOMPTEPRO_POST_LOGOUT_REDIRECT_URI }}
  IRON_SESSION_PWD: ${{ secrets.IRON_SESSION_PWD }}

jobs:
  dependencies:
    name: 'Install dependencies'
    runs-on: ubuntu-latest
    steps:
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}
      - name: Install and cache dependencies
        uses: ./.github/actions/install-dependencies

  testExternalAPIs:
    name: Test external APIs
    runs-on: ubuntu-latest
    steps:
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}
      - name: Load node_modules
        uses: ./.github/actions/load-dependencies

      - name: Launch jest tests
        run: npm run test:api-clients -- --runInBand --testTimeout=60000
