name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: '0 9 * * *'

jobs:
  deploy-staging:
    name: Deploy - staging
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ./deploy.key
          sudo chmod 600 ./deploy.key
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_MACHINE_USER_PRIVATE_KEY}}
          SSH_HOST: ${{ secrets.SSH_HOST_STAGING }}

      - name: Deploy to staging
        run: ssh -i ./deploy.key www-data@$SSH_HOST 'sh /opt/apps/annuaire-entreprises/annuaire-entreprises-deploy.sh'
        env:
          SSH_HOST: ${{ secrets.SSH_HOST_STAGING }}

      - uses: actions/checkout@v3
      - name: Notify staging failure only
        if: failure()
        uses: ./.github/actions/notify
        with:
          message: 'ðŸš¨ ${{ github.event.repository.name }} : deploy to staging failed'
          hook: ${{ secrets.TCHAP_HOOK }}
          id: ${{ secrets.TCHAP_ROOM_ID }}

  deploy-production:
    name: Deploy - production
    runs-on: ubuntu-latest
    needs: [deploy-staging]
    timeout-minutes: 15
    strategy:
      matrix:
        include:
          - environment: production-01
            host: SSH_HOST_PRODUCTION_01
          - environment: production-02
            host: SSH_HOST_PRODUCTION_02
    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ./deploy.key
          sudo chmod 600 ./deploy.key
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_MACHINE_USER_PRIVATE_KEY}}
          SSH_HOST: ${{ secrets[matrix.host] }}

      - name: Deploy to production
        run: ssh -i ./deploy.key www-data@$SSH_HOST 'sh /opt/apps/annuaire-entreprises/annuaire-entreprises-deploy.sh'
        env:
          SSH_HOST: ${{ secrets[matrix.host] }}

      - uses: actions/checkout@v3
      - name: Notify staging failure only
        if: failure()
        uses: ./.github/actions/notify
        with:
          message: 'ðŸš¨ ${{ github.event.repository.name }} : deploy to production failed'
          hook: ${{ secrets.TCHAP_HOOK }}
          id: ${{ secrets.TCHAP_ROOM_ID }}
