# This workflow will do a clean install of node dependencies, build the source code and run tests

name: 'Pre-merge checks'

on:
  pull_request:
    branches: [main]

# Be extremely careful as the env variables defined here are accessible by all the actions of the workflow.
# For critical env variable, declare it within the action.
env:
  node-version: 18.x
  INSEE_CLIENT_ID: ${{ secrets.INSEE_CLIENT_ID }}
  INSEE_CLIENT_SECRET: ${{ secrets.INSEE_CLIENT_SECRET}}
  INSEE_CLIENT_ID_FALLBACK: ${{ secrets.INSEE_CLIENT_ID_FALLBACK }}
  INSEE_CLIENT_SECRET_FALLBACK: ${{ secrets.INSEE_CLIENT_SECRET_FALLBACK}}
  INSEE_ENABLED: enabled
  INDEXING_ENABLED: enabled
  PROXY_API_KEY: ${{ secrets.PROXY_API_KEY }}
  REDIS_URL: redis://127.0.0.1:6379
  MONCOMPTEPRO_CLIENT_ID: ${{ secrets.MONCOMPTEPRO_CLIENT_ID }}
  MONCOMPTEPRO_CLIENT_SECRET: ${{ secrets.MONCOMPTEPRO_CLIENT_SECRET }}
  MONCOMPTEPRO_URL: ${{ secrets.MONCOMPTEPRO_URL }}
  MONCOMPTEPRO_REDIRECT_URI: ${{ secrets.MONCOMPTEPRO_REDIRECT_URI }}
  MONCOMPTEPRO_POST_LOGOUT_REDIRECT_URI: ${{ secrets.MONCOMPTEPRO_POST_LOGOUT_REDIRECT_URI }}
  IRON_SESSION_PWD: ${{ secrets.IRON_SESSION_PWD }}

jobs:
  dependencies:
    name: 'Install dependencies'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}
      - uses: ./.github/actions/install-dependencies
        name: Install and cache dependencies

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [dependencies]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}
      - name: Load node_modules
        uses: ./.github/actions/load-dependencies
      - name: Run linter
        run: npm run lint

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [dependencies]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}
      - name: Load node_modules
        uses: ./.github/actions/load-dependencies

      - name: Install redis
        run: sudo apt-get install -y redis-tools redis-server

      - name: Build site
        run: npm run build
        env:
          END2END_MOCKING: enabled
      - name: Cache site
        uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: [dependencies]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}
      - name: Load node_modules
        uses: ./.github/actions/load-dependencies
      - name: Run unit tests
        run: |
          npm run test:unit

  testE2E:
    name: End2end tests
    runs-on: ubuntu-latest
    needs: [build]
    env:
      END2END_MOCKING: enabled
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v3
      - name: Load cached build
        uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: Install redis
        run: sudo apt-get install -y redis-tools redis-server

      - name: Run Cypress tests ðŸ§ª
        # https://github.com/cypress-io/github-action
        uses: cypress-io/github-action@v5
        timeout-minutes: 10
        with:
          start: npm start
          record: false
        env:
          PORT: 3000
          END2END_MOCKING: enabled

  typecheck:
    name: Type check
    runs-on: ubuntu-latest
    needs: [dependencies]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}
      - name: Load node_modules
        uses: ./.github/actions/load-dependencies
      - name: Run typescript check
        run: npx tsc --noEmit

  testAPIClient:
    name: Unit tests API clients
    runs-on: ubuntu-latest
    needs: [dependencies]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}
      - name: Load node_modules
        uses: ./.github/actions/load-dependencies
      - name: Install redis
        run: sudo apt-get install -y redis-tools redis-server

      - name: Run API client unit tests
        run: |
          npm run test:api-clients -- --runInBand --testTimeout=60000

      - name: '[IF FAIL] Manual action required (read below)'
        if: ${{ failure() }}
        run: |
          echo "The API client tests failed.

          We tests external APIs, and ensure there is no regression compared to 
          previous successful runs stored in snapshots.

          If the test failed, it means that the response returned by the API client
          is not the same as the one stored in the snapshot. 

          You need to analyse the diff in the logs of the job to decide what to do :

          - If the changes concerns only the data, and not the model (eg. company name changed), 
            you need to update the snapshot locally by running the following command :

            npm run test:api-clients -- -u

          - If the changes concerns the model (eg. API changed, missing field, type of data),
            you need to check if it is a breaking change, and correct the code if is.
            When the code is fixed, you can update the snapshot locally.
            
            
          If there is no diff, it probably means that the API is down. You need to check if 
          there is an incident reported on the APIs status page :

          https://annuaire-entreprises.data.gouv.fr/donnees/api

          If there is no incident, you can try to run the tests again.
          "
